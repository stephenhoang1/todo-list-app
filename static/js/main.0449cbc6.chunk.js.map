{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0449cbc6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ( {setInputText, todos, setTodos, inputText, setStatus} ) => {\n  \n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    };\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault()\n        setTodos([\n            ...todos, {\n                text: inputText, \n                completed: false, \n                id: Math.random()* 1000\n            }\n        ])\n        setInputText('');\n    };\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n\n    return (    \n    <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form","import React from 'react';\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n    const deleteHandler = () => {\n       setTodos(todos.filter((el) => el.id !== todo.id))\n    }\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if (item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed\n                }\n            } \n            return item\n        }))\n     } \n    return (\n          <div className=\"todo\">\n              <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n              <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\n              <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\n              </div>   \n    )\n}\n\nexport default Todo","import React from 'react';\nimport Todo from './Todo' \n\nconst TodoList = ( {todos, setTodos, filteredTodos}  ) => {\n    return (\n        <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n            {filteredTodos.map((todo) => (\n                <Todo \n                todos={todos}  // pass down the state so that we can modify/delete each todo\n                setTodos={setTodos}\n                todo={todo}\n                key={todo.id} \n                text={todo.text}\n                />\n            ))}\n           \n        </ul>\n\n      </div>\n    )\n} \n\nexport default TodoList","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form  from './components/Form' \nimport TodoList  from './components/TodoList' \n\nfunction App() {\n  //State stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('All');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // run once when the app starts\n  useEffect(() => {\n    getLocalTodos()\n  }, [ ])\n\n\n  //Use Effect \n    useEffect(() => {\n    filterHandler()\n    saveLocalTodos()\n  }, [todos, status])\n\n  //Functions\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed': \n      setFilteredTodos(todos.filter(todo => todo.completed === true))\n      break;\n      case 'uncompleted': \n      setFilteredTodos(todos.filter(todo => todo.completed === false))\n      break;\n      default: \n      setFilteredTodos(todos)\n      break;\n  }\n  }\n\n  //Local storage\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let localTodo = JSON.parse(localStorage.getItem('todos'))\n      setTodos(localTodo)\n    }\n  } \n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Stephen's Todo List</h1>\n    </header>\n    <Form \n      todos={todos}  \n      setTodos={setTodos}\n      inputText={inputText}\n      setInputText={setInputText} \n      setStatus={setStatus}\n      />\n    <TodoList \n    todos={todos}\n    setTodos={setTodos}\n    filteredTodos={filteredTodos}\n    />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}